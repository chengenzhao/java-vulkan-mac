// Generated by jextract

package org.vulkan;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

/**
 * {@snippet lang=c :
 * struct VkPhysicalDeviceVulkan13Properties {
 *     VkStructureType sType;
 *     void *pNext;
 *     uint32_t minSubgroupSize;
 *     uint32_t maxSubgroupSize;
 *     uint32_t maxComputeWorkgroupSubgroups;
 *     VkShaderStageFlags requiredSubgroupSizeStages;
 *     uint32_t maxInlineUniformBlockSize;
 *     uint32_t maxPerStageDescriptorInlineUniformBlocks;
 *     uint32_t maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks;
 *     uint32_t maxDescriptorSetInlineUniformBlocks;
 *     uint32_t maxDescriptorSetUpdateAfterBindInlineUniformBlocks;
 *     uint32_t maxInlineUniformTotalSize;
 *     VkBool32 integerDotProduct8BitUnsignedAccelerated;
 *     VkBool32 integerDotProduct8BitSignedAccelerated;
 *     VkBool32 integerDotProduct8BitMixedSignednessAccelerated;
 *     VkBool32 integerDotProduct4x8BitPackedUnsignedAccelerated;
 *     VkBool32 integerDotProduct4x8BitPackedSignedAccelerated;
 *     VkBool32 integerDotProduct4x8BitPackedMixedSignednessAccelerated;
 *     VkBool32 integerDotProduct16BitUnsignedAccelerated;
 *     VkBool32 integerDotProduct16BitSignedAccelerated;
 *     VkBool32 integerDotProduct16BitMixedSignednessAccelerated;
 *     VkBool32 integerDotProduct32BitUnsignedAccelerated;
 *     VkBool32 integerDotProduct32BitSignedAccelerated;
 *     VkBool32 integerDotProduct32BitMixedSignednessAccelerated;
 *     VkBool32 integerDotProduct64BitUnsignedAccelerated;
 *     VkBool32 integerDotProduct64BitSignedAccelerated;
 *     VkBool32 integerDotProduct64BitMixedSignednessAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating8BitUnsignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating8BitSignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating16BitUnsignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating16BitSignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating32BitUnsignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating32BitSignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating64BitUnsignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating64BitSignedAccelerated;
 *     VkBool32 integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated;
 *     VkDeviceSize storageTexelBufferOffsetAlignmentBytes;
 *     VkBool32 storageTexelBufferOffsetSingleTexelAlignment;
 *     VkDeviceSize uniformTexelBufferOffsetAlignmentBytes;
 *     VkBool32 uniformTexelBufferOffsetSingleTexelAlignment;
 *     VkDeviceSize maxBufferSize;
 * }
 * }
 */
public class VkPhysicalDeviceVulkan13Properties {

    VkPhysicalDeviceVulkan13Properties() {
        // Should not be called directly
    }

    private static final GroupLayout $LAYOUT = MemoryLayout.structLayout(
        vulkan_h.C_INT.withName("sType"),
        MemoryLayout.paddingLayout(4),
        vulkan_h.C_POINTER.withName("pNext"),
        vulkan_h.C_INT.withName("minSubgroupSize"),
        vulkan_h.C_INT.withName("maxSubgroupSize"),
        vulkan_h.C_INT.withName("maxComputeWorkgroupSubgroups"),
        vulkan_h.C_INT.withName("requiredSubgroupSizeStages"),
        vulkan_h.C_INT.withName("maxInlineUniformBlockSize"),
        vulkan_h.C_INT.withName("maxPerStageDescriptorInlineUniformBlocks"),
        vulkan_h.C_INT.withName("maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"),
        vulkan_h.C_INT.withName("maxDescriptorSetInlineUniformBlocks"),
        vulkan_h.C_INT.withName("maxDescriptorSetUpdateAfterBindInlineUniformBlocks"),
        vulkan_h.C_INT.withName("maxInlineUniformTotalSize"),
        vulkan_h.C_INT.withName("integerDotProduct8BitUnsignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProduct8BitSignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProduct8BitMixedSignednessAccelerated"),
        vulkan_h.C_INT.withName("integerDotProduct4x8BitPackedUnsignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProduct4x8BitPackedSignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProduct4x8BitPackedMixedSignednessAccelerated"),
        vulkan_h.C_INT.withName("integerDotProduct16BitUnsignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProduct16BitSignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProduct16BitMixedSignednessAccelerated"),
        vulkan_h.C_INT.withName("integerDotProduct32BitUnsignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProduct32BitSignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProduct32BitMixedSignednessAccelerated"),
        vulkan_h.C_INT.withName("integerDotProduct64BitUnsignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProduct64BitSignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProduct64BitMixedSignednessAccelerated"),
        vulkan_h.C_INT.withName("integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProductAccumulatingSaturating8BitSignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"),
        vulkan_h.C_INT.withName("integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"),
        vulkan_h.C_INT.withName("integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProductAccumulatingSaturating16BitSignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"),
        vulkan_h.C_INT.withName("integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProductAccumulatingSaturating32BitSignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"),
        vulkan_h.C_INT.withName("integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProductAccumulatingSaturating64BitSignedAccelerated"),
        vulkan_h.C_INT.withName("integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"),
        vulkan_h.C_LONG_LONG.withName("storageTexelBufferOffsetAlignmentBytes"),
        vulkan_h.C_INT.withName("storageTexelBufferOffsetSingleTexelAlignment"),
        MemoryLayout.paddingLayout(4),
        vulkan_h.C_LONG_LONG.withName("uniformTexelBufferOffsetAlignmentBytes"),
        vulkan_h.C_INT.withName("uniformTexelBufferOffsetSingleTexelAlignment"),
        MemoryLayout.paddingLayout(4),
        vulkan_h.C_LONG_LONG.withName("maxBufferSize")
    ).withName("VkPhysicalDeviceVulkan13Properties");

    /**
     * The layout of this struct
     */
    public static final GroupLayout layout() {
        return $LAYOUT;
    }

    private static final OfInt sType$LAYOUT = (OfInt)$LAYOUT.select(groupElement("sType"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkStructureType sType
     * }
     */
    public static final OfInt sType$layout() {
        return sType$LAYOUT;
    }

    private static final long sType$OFFSET = 0;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkStructureType sType
     * }
     */
    public static final long sType$offset() {
        return sType$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkStructureType sType
     * }
     */
    public static int sType(MemorySegment struct) {
        return struct.get(sType$LAYOUT, sType$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkStructureType sType
     * }
     */
    public static void sType(MemorySegment struct, int fieldValue) {
        struct.set(sType$LAYOUT, sType$OFFSET, fieldValue);
    }

    private static final AddressLayout pNext$LAYOUT = (AddressLayout)$LAYOUT.select(groupElement("pNext"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * void *pNext
     * }
     */
    public static final AddressLayout pNext$layout() {
        return pNext$LAYOUT;
    }

    private static final long pNext$OFFSET = 8;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * void *pNext
     * }
     */
    public static final long pNext$offset() {
        return pNext$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * void *pNext
     * }
     */
    public static MemorySegment pNext(MemorySegment struct) {
        return struct.get(pNext$LAYOUT, pNext$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * void *pNext
     * }
     */
    public static void pNext(MemorySegment struct, MemorySegment fieldValue) {
        struct.set(pNext$LAYOUT, pNext$OFFSET, fieldValue);
    }

    private static final OfInt minSubgroupSize$LAYOUT = (OfInt)$LAYOUT.select(groupElement("minSubgroupSize"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * uint32_t minSubgroupSize
     * }
     */
    public static final OfInt minSubgroupSize$layout() {
        return minSubgroupSize$LAYOUT;
    }

    private static final long minSubgroupSize$OFFSET = 16;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * uint32_t minSubgroupSize
     * }
     */
    public static final long minSubgroupSize$offset() {
        return minSubgroupSize$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * uint32_t minSubgroupSize
     * }
     */
    public static int minSubgroupSize(MemorySegment struct) {
        return struct.get(minSubgroupSize$LAYOUT, minSubgroupSize$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * uint32_t minSubgroupSize
     * }
     */
    public static void minSubgroupSize(MemorySegment struct, int fieldValue) {
        struct.set(minSubgroupSize$LAYOUT, minSubgroupSize$OFFSET, fieldValue);
    }

    private static final OfInt maxSubgroupSize$LAYOUT = (OfInt)$LAYOUT.select(groupElement("maxSubgroupSize"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * uint32_t maxSubgroupSize
     * }
     */
    public static final OfInt maxSubgroupSize$layout() {
        return maxSubgroupSize$LAYOUT;
    }

    private static final long maxSubgroupSize$OFFSET = 20;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * uint32_t maxSubgroupSize
     * }
     */
    public static final long maxSubgroupSize$offset() {
        return maxSubgroupSize$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * uint32_t maxSubgroupSize
     * }
     */
    public static int maxSubgroupSize(MemorySegment struct) {
        return struct.get(maxSubgroupSize$LAYOUT, maxSubgroupSize$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * uint32_t maxSubgroupSize
     * }
     */
    public static void maxSubgroupSize(MemorySegment struct, int fieldValue) {
        struct.set(maxSubgroupSize$LAYOUT, maxSubgroupSize$OFFSET, fieldValue);
    }

    private static final OfInt maxComputeWorkgroupSubgroups$LAYOUT = (OfInt)$LAYOUT.select(groupElement("maxComputeWorkgroupSubgroups"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * uint32_t maxComputeWorkgroupSubgroups
     * }
     */
    public static final OfInt maxComputeWorkgroupSubgroups$layout() {
        return maxComputeWorkgroupSubgroups$LAYOUT;
    }

    private static final long maxComputeWorkgroupSubgroups$OFFSET = 24;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * uint32_t maxComputeWorkgroupSubgroups
     * }
     */
    public static final long maxComputeWorkgroupSubgroups$offset() {
        return maxComputeWorkgroupSubgroups$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * uint32_t maxComputeWorkgroupSubgroups
     * }
     */
    public static int maxComputeWorkgroupSubgroups(MemorySegment struct) {
        return struct.get(maxComputeWorkgroupSubgroups$LAYOUT, maxComputeWorkgroupSubgroups$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * uint32_t maxComputeWorkgroupSubgroups
     * }
     */
    public static void maxComputeWorkgroupSubgroups(MemorySegment struct, int fieldValue) {
        struct.set(maxComputeWorkgroupSubgroups$LAYOUT, maxComputeWorkgroupSubgroups$OFFSET, fieldValue);
    }

    private static final OfInt requiredSubgroupSizeStages$LAYOUT = (OfInt)$LAYOUT.select(groupElement("requiredSubgroupSizeStages"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkShaderStageFlags requiredSubgroupSizeStages
     * }
     */
    public static final OfInt requiredSubgroupSizeStages$layout() {
        return requiredSubgroupSizeStages$LAYOUT;
    }

    private static final long requiredSubgroupSizeStages$OFFSET = 28;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkShaderStageFlags requiredSubgroupSizeStages
     * }
     */
    public static final long requiredSubgroupSizeStages$offset() {
        return requiredSubgroupSizeStages$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkShaderStageFlags requiredSubgroupSizeStages
     * }
     */
    public static int requiredSubgroupSizeStages(MemorySegment struct) {
        return struct.get(requiredSubgroupSizeStages$LAYOUT, requiredSubgroupSizeStages$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkShaderStageFlags requiredSubgroupSizeStages
     * }
     */
    public static void requiredSubgroupSizeStages(MemorySegment struct, int fieldValue) {
        struct.set(requiredSubgroupSizeStages$LAYOUT, requiredSubgroupSizeStages$OFFSET, fieldValue);
    }

    private static final OfInt maxInlineUniformBlockSize$LAYOUT = (OfInt)$LAYOUT.select(groupElement("maxInlineUniformBlockSize"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * uint32_t maxInlineUniformBlockSize
     * }
     */
    public static final OfInt maxInlineUniformBlockSize$layout() {
        return maxInlineUniformBlockSize$LAYOUT;
    }

    private static final long maxInlineUniformBlockSize$OFFSET = 32;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * uint32_t maxInlineUniformBlockSize
     * }
     */
    public static final long maxInlineUniformBlockSize$offset() {
        return maxInlineUniformBlockSize$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * uint32_t maxInlineUniformBlockSize
     * }
     */
    public static int maxInlineUniformBlockSize(MemorySegment struct) {
        return struct.get(maxInlineUniformBlockSize$LAYOUT, maxInlineUniformBlockSize$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * uint32_t maxInlineUniformBlockSize
     * }
     */
    public static void maxInlineUniformBlockSize(MemorySegment struct, int fieldValue) {
        struct.set(maxInlineUniformBlockSize$LAYOUT, maxInlineUniformBlockSize$OFFSET, fieldValue);
    }

    private static final OfInt maxPerStageDescriptorInlineUniformBlocks$LAYOUT = (OfInt)$LAYOUT.select(groupElement("maxPerStageDescriptorInlineUniformBlocks"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * uint32_t maxPerStageDescriptorInlineUniformBlocks
     * }
     */
    public static final OfInt maxPerStageDescriptorInlineUniformBlocks$layout() {
        return maxPerStageDescriptorInlineUniformBlocks$LAYOUT;
    }

    private static final long maxPerStageDescriptorInlineUniformBlocks$OFFSET = 36;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * uint32_t maxPerStageDescriptorInlineUniformBlocks
     * }
     */
    public static final long maxPerStageDescriptorInlineUniformBlocks$offset() {
        return maxPerStageDescriptorInlineUniformBlocks$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * uint32_t maxPerStageDescriptorInlineUniformBlocks
     * }
     */
    public static int maxPerStageDescriptorInlineUniformBlocks(MemorySegment struct) {
        return struct.get(maxPerStageDescriptorInlineUniformBlocks$LAYOUT, maxPerStageDescriptorInlineUniformBlocks$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * uint32_t maxPerStageDescriptorInlineUniformBlocks
     * }
     */
    public static void maxPerStageDescriptorInlineUniformBlocks(MemorySegment struct, int fieldValue) {
        struct.set(maxPerStageDescriptorInlineUniformBlocks$LAYOUT, maxPerStageDescriptorInlineUniformBlocks$OFFSET, fieldValue);
    }

    private static final OfInt maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks$LAYOUT = (OfInt)$LAYOUT.select(groupElement("maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * uint32_t maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks
     * }
     */
    public static final OfInt maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks$layout() {
        return maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks$LAYOUT;
    }

    private static final long maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks$OFFSET = 40;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * uint32_t maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks
     * }
     */
    public static final long maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks$offset() {
        return maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * uint32_t maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks
     * }
     */
    public static int maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks(MemorySegment struct) {
        return struct.get(maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks$LAYOUT, maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * uint32_t maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks
     * }
     */
    public static void maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks(MemorySegment struct, int fieldValue) {
        struct.set(maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks$LAYOUT, maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks$OFFSET, fieldValue);
    }

    private static final OfInt maxDescriptorSetInlineUniformBlocks$LAYOUT = (OfInt)$LAYOUT.select(groupElement("maxDescriptorSetInlineUniformBlocks"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * uint32_t maxDescriptorSetInlineUniformBlocks
     * }
     */
    public static final OfInt maxDescriptorSetInlineUniformBlocks$layout() {
        return maxDescriptorSetInlineUniformBlocks$LAYOUT;
    }

    private static final long maxDescriptorSetInlineUniformBlocks$OFFSET = 44;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * uint32_t maxDescriptorSetInlineUniformBlocks
     * }
     */
    public static final long maxDescriptorSetInlineUniformBlocks$offset() {
        return maxDescriptorSetInlineUniformBlocks$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * uint32_t maxDescriptorSetInlineUniformBlocks
     * }
     */
    public static int maxDescriptorSetInlineUniformBlocks(MemorySegment struct) {
        return struct.get(maxDescriptorSetInlineUniformBlocks$LAYOUT, maxDescriptorSetInlineUniformBlocks$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * uint32_t maxDescriptorSetInlineUniformBlocks
     * }
     */
    public static void maxDescriptorSetInlineUniformBlocks(MemorySegment struct, int fieldValue) {
        struct.set(maxDescriptorSetInlineUniformBlocks$LAYOUT, maxDescriptorSetInlineUniformBlocks$OFFSET, fieldValue);
    }

    private static final OfInt maxDescriptorSetUpdateAfterBindInlineUniformBlocks$LAYOUT = (OfInt)$LAYOUT.select(groupElement("maxDescriptorSetUpdateAfterBindInlineUniformBlocks"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * uint32_t maxDescriptorSetUpdateAfterBindInlineUniformBlocks
     * }
     */
    public static final OfInt maxDescriptorSetUpdateAfterBindInlineUniformBlocks$layout() {
        return maxDescriptorSetUpdateAfterBindInlineUniformBlocks$LAYOUT;
    }

    private static final long maxDescriptorSetUpdateAfterBindInlineUniformBlocks$OFFSET = 48;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * uint32_t maxDescriptorSetUpdateAfterBindInlineUniformBlocks
     * }
     */
    public static final long maxDescriptorSetUpdateAfterBindInlineUniformBlocks$offset() {
        return maxDescriptorSetUpdateAfterBindInlineUniformBlocks$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * uint32_t maxDescriptorSetUpdateAfterBindInlineUniformBlocks
     * }
     */
    public static int maxDescriptorSetUpdateAfterBindInlineUniformBlocks(MemorySegment struct) {
        return struct.get(maxDescriptorSetUpdateAfterBindInlineUniformBlocks$LAYOUT, maxDescriptorSetUpdateAfterBindInlineUniformBlocks$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * uint32_t maxDescriptorSetUpdateAfterBindInlineUniformBlocks
     * }
     */
    public static void maxDescriptorSetUpdateAfterBindInlineUniformBlocks(MemorySegment struct, int fieldValue) {
        struct.set(maxDescriptorSetUpdateAfterBindInlineUniformBlocks$LAYOUT, maxDescriptorSetUpdateAfterBindInlineUniformBlocks$OFFSET, fieldValue);
    }

    private static final OfInt maxInlineUniformTotalSize$LAYOUT = (OfInt)$LAYOUT.select(groupElement("maxInlineUniformTotalSize"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * uint32_t maxInlineUniformTotalSize
     * }
     */
    public static final OfInt maxInlineUniformTotalSize$layout() {
        return maxInlineUniformTotalSize$LAYOUT;
    }

    private static final long maxInlineUniformTotalSize$OFFSET = 52;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * uint32_t maxInlineUniformTotalSize
     * }
     */
    public static final long maxInlineUniformTotalSize$offset() {
        return maxInlineUniformTotalSize$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * uint32_t maxInlineUniformTotalSize
     * }
     */
    public static int maxInlineUniformTotalSize(MemorySegment struct) {
        return struct.get(maxInlineUniformTotalSize$LAYOUT, maxInlineUniformTotalSize$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * uint32_t maxInlineUniformTotalSize
     * }
     */
    public static void maxInlineUniformTotalSize(MemorySegment struct, int fieldValue) {
        struct.set(maxInlineUniformTotalSize$LAYOUT, maxInlineUniformTotalSize$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProduct8BitUnsignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProduct8BitUnsignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct8BitUnsignedAccelerated
     * }
     */
    public static final OfInt integerDotProduct8BitUnsignedAccelerated$layout() {
        return integerDotProduct8BitUnsignedAccelerated$LAYOUT;
    }

    private static final long integerDotProduct8BitUnsignedAccelerated$OFFSET = 56;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct8BitUnsignedAccelerated
     * }
     */
    public static final long integerDotProduct8BitUnsignedAccelerated$offset() {
        return integerDotProduct8BitUnsignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct8BitUnsignedAccelerated
     * }
     */
    public static int integerDotProduct8BitUnsignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProduct8BitUnsignedAccelerated$LAYOUT, integerDotProduct8BitUnsignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct8BitUnsignedAccelerated
     * }
     */
    public static void integerDotProduct8BitUnsignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProduct8BitUnsignedAccelerated$LAYOUT, integerDotProduct8BitUnsignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProduct8BitSignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProduct8BitSignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct8BitSignedAccelerated
     * }
     */
    public static final OfInt integerDotProduct8BitSignedAccelerated$layout() {
        return integerDotProduct8BitSignedAccelerated$LAYOUT;
    }

    private static final long integerDotProduct8BitSignedAccelerated$OFFSET = 60;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct8BitSignedAccelerated
     * }
     */
    public static final long integerDotProduct8BitSignedAccelerated$offset() {
        return integerDotProduct8BitSignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct8BitSignedAccelerated
     * }
     */
    public static int integerDotProduct8BitSignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProduct8BitSignedAccelerated$LAYOUT, integerDotProduct8BitSignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct8BitSignedAccelerated
     * }
     */
    public static void integerDotProduct8BitSignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProduct8BitSignedAccelerated$LAYOUT, integerDotProduct8BitSignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProduct8BitMixedSignednessAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProduct8BitMixedSignednessAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct8BitMixedSignednessAccelerated
     * }
     */
    public static final OfInt integerDotProduct8BitMixedSignednessAccelerated$layout() {
        return integerDotProduct8BitMixedSignednessAccelerated$LAYOUT;
    }

    private static final long integerDotProduct8BitMixedSignednessAccelerated$OFFSET = 64;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct8BitMixedSignednessAccelerated
     * }
     */
    public static final long integerDotProduct8BitMixedSignednessAccelerated$offset() {
        return integerDotProduct8BitMixedSignednessAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct8BitMixedSignednessAccelerated
     * }
     */
    public static int integerDotProduct8BitMixedSignednessAccelerated(MemorySegment struct) {
        return struct.get(integerDotProduct8BitMixedSignednessAccelerated$LAYOUT, integerDotProduct8BitMixedSignednessAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct8BitMixedSignednessAccelerated
     * }
     */
    public static void integerDotProduct8BitMixedSignednessAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProduct8BitMixedSignednessAccelerated$LAYOUT, integerDotProduct8BitMixedSignednessAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProduct4x8BitPackedUnsignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProduct4x8BitPackedUnsignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct4x8BitPackedUnsignedAccelerated
     * }
     */
    public static final OfInt integerDotProduct4x8BitPackedUnsignedAccelerated$layout() {
        return integerDotProduct4x8BitPackedUnsignedAccelerated$LAYOUT;
    }

    private static final long integerDotProduct4x8BitPackedUnsignedAccelerated$OFFSET = 68;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct4x8BitPackedUnsignedAccelerated
     * }
     */
    public static final long integerDotProduct4x8BitPackedUnsignedAccelerated$offset() {
        return integerDotProduct4x8BitPackedUnsignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct4x8BitPackedUnsignedAccelerated
     * }
     */
    public static int integerDotProduct4x8BitPackedUnsignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProduct4x8BitPackedUnsignedAccelerated$LAYOUT, integerDotProduct4x8BitPackedUnsignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct4x8BitPackedUnsignedAccelerated
     * }
     */
    public static void integerDotProduct4x8BitPackedUnsignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProduct4x8BitPackedUnsignedAccelerated$LAYOUT, integerDotProduct4x8BitPackedUnsignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProduct4x8BitPackedSignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProduct4x8BitPackedSignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct4x8BitPackedSignedAccelerated
     * }
     */
    public static final OfInt integerDotProduct4x8BitPackedSignedAccelerated$layout() {
        return integerDotProduct4x8BitPackedSignedAccelerated$LAYOUT;
    }

    private static final long integerDotProduct4x8BitPackedSignedAccelerated$OFFSET = 72;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct4x8BitPackedSignedAccelerated
     * }
     */
    public static final long integerDotProduct4x8BitPackedSignedAccelerated$offset() {
        return integerDotProduct4x8BitPackedSignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct4x8BitPackedSignedAccelerated
     * }
     */
    public static int integerDotProduct4x8BitPackedSignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProduct4x8BitPackedSignedAccelerated$LAYOUT, integerDotProduct4x8BitPackedSignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct4x8BitPackedSignedAccelerated
     * }
     */
    public static void integerDotProduct4x8BitPackedSignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProduct4x8BitPackedSignedAccelerated$LAYOUT, integerDotProduct4x8BitPackedSignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProduct4x8BitPackedMixedSignednessAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProduct4x8BitPackedMixedSignednessAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct4x8BitPackedMixedSignednessAccelerated
     * }
     */
    public static final OfInt integerDotProduct4x8BitPackedMixedSignednessAccelerated$layout() {
        return integerDotProduct4x8BitPackedMixedSignednessAccelerated$LAYOUT;
    }

    private static final long integerDotProduct4x8BitPackedMixedSignednessAccelerated$OFFSET = 76;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct4x8BitPackedMixedSignednessAccelerated
     * }
     */
    public static final long integerDotProduct4x8BitPackedMixedSignednessAccelerated$offset() {
        return integerDotProduct4x8BitPackedMixedSignednessAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct4x8BitPackedMixedSignednessAccelerated
     * }
     */
    public static int integerDotProduct4x8BitPackedMixedSignednessAccelerated(MemorySegment struct) {
        return struct.get(integerDotProduct4x8BitPackedMixedSignednessAccelerated$LAYOUT, integerDotProduct4x8BitPackedMixedSignednessAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct4x8BitPackedMixedSignednessAccelerated
     * }
     */
    public static void integerDotProduct4x8BitPackedMixedSignednessAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProduct4x8BitPackedMixedSignednessAccelerated$LAYOUT, integerDotProduct4x8BitPackedMixedSignednessAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProduct16BitUnsignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProduct16BitUnsignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct16BitUnsignedAccelerated
     * }
     */
    public static final OfInt integerDotProduct16BitUnsignedAccelerated$layout() {
        return integerDotProduct16BitUnsignedAccelerated$LAYOUT;
    }

    private static final long integerDotProduct16BitUnsignedAccelerated$OFFSET = 80;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct16BitUnsignedAccelerated
     * }
     */
    public static final long integerDotProduct16BitUnsignedAccelerated$offset() {
        return integerDotProduct16BitUnsignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct16BitUnsignedAccelerated
     * }
     */
    public static int integerDotProduct16BitUnsignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProduct16BitUnsignedAccelerated$LAYOUT, integerDotProduct16BitUnsignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct16BitUnsignedAccelerated
     * }
     */
    public static void integerDotProduct16BitUnsignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProduct16BitUnsignedAccelerated$LAYOUT, integerDotProduct16BitUnsignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProduct16BitSignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProduct16BitSignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct16BitSignedAccelerated
     * }
     */
    public static final OfInt integerDotProduct16BitSignedAccelerated$layout() {
        return integerDotProduct16BitSignedAccelerated$LAYOUT;
    }

    private static final long integerDotProduct16BitSignedAccelerated$OFFSET = 84;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct16BitSignedAccelerated
     * }
     */
    public static final long integerDotProduct16BitSignedAccelerated$offset() {
        return integerDotProduct16BitSignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct16BitSignedAccelerated
     * }
     */
    public static int integerDotProduct16BitSignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProduct16BitSignedAccelerated$LAYOUT, integerDotProduct16BitSignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct16BitSignedAccelerated
     * }
     */
    public static void integerDotProduct16BitSignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProduct16BitSignedAccelerated$LAYOUT, integerDotProduct16BitSignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProduct16BitMixedSignednessAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProduct16BitMixedSignednessAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct16BitMixedSignednessAccelerated
     * }
     */
    public static final OfInt integerDotProduct16BitMixedSignednessAccelerated$layout() {
        return integerDotProduct16BitMixedSignednessAccelerated$LAYOUT;
    }

    private static final long integerDotProduct16BitMixedSignednessAccelerated$OFFSET = 88;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct16BitMixedSignednessAccelerated
     * }
     */
    public static final long integerDotProduct16BitMixedSignednessAccelerated$offset() {
        return integerDotProduct16BitMixedSignednessAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct16BitMixedSignednessAccelerated
     * }
     */
    public static int integerDotProduct16BitMixedSignednessAccelerated(MemorySegment struct) {
        return struct.get(integerDotProduct16BitMixedSignednessAccelerated$LAYOUT, integerDotProduct16BitMixedSignednessAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct16BitMixedSignednessAccelerated
     * }
     */
    public static void integerDotProduct16BitMixedSignednessAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProduct16BitMixedSignednessAccelerated$LAYOUT, integerDotProduct16BitMixedSignednessAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProduct32BitUnsignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProduct32BitUnsignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct32BitUnsignedAccelerated
     * }
     */
    public static final OfInt integerDotProduct32BitUnsignedAccelerated$layout() {
        return integerDotProduct32BitUnsignedAccelerated$LAYOUT;
    }

    private static final long integerDotProduct32BitUnsignedAccelerated$OFFSET = 92;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct32BitUnsignedAccelerated
     * }
     */
    public static final long integerDotProduct32BitUnsignedAccelerated$offset() {
        return integerDotProduct32BitUnsignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct32BitUnsignedAccelerated
     * }
     */
    public static int integerDotProduct32BitUnsignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProduct32BitUnsignedAccelerated$LAYOUT, integerDotProduct32BitUnsignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct32BitUnsignedAccelerated
     * }
     */
    public static void integerDotProduct32BitUnsignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProduct32BitUnsignedAccelerated$LAYOUT, integerDotProduct32BitUnsignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProduct32BitSignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProduct32BitSignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct32BitSignedAccelerated
     * }
     */
    public static final OfInt integerDotProduct32BitSignedAccelerated$layout() {
        return integerDotProduct32BitSignedAccelerated$LAYOUT;
    }

    private static final long integerDotProduct32BitSignedAccelerated$OFFSET = 96;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct32BitSignedAccelerated
     * }
     */
    public static final long integerDotProduct32BitSignedAccelerated$offset() {
        return integerDotProduct32BitSignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct32BitSignedAccelerated
     * }
     */
    public static int integerDotProduct32BitSignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProduct32BitSignedAccelerated$LAYOUT, integerDotProduct32BitSignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct32BitSignedAccelerated
     * }
     */
    public static void integerDotProduct32BitSignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProduct32BitSignedAccelerated$LAYOUT, integerDotProduct32BitSignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProduct32BitMixedSignednessAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProduct32BitMixedSignednessAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct32BitMixedSignednessAccelerated
     * }
     */
    public static final OfInt integerDotProduct32BitMixedSignednessAccelerated$layout() {
        return integerDotProduct32BitMixedSignednessAccelerated$LAYOUT;
    }

    private static final long integerDotProduct32BitMixedSignednessAccelerated$OFFSET = 100;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct32BitMixedSignednessAccelerated
     * }
     */
    public static final long integerDotProduct32BitMixedSignednessAccelerated$offset() {
        return integerDotProduct32BitMixedSignednessAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct32BitMixedSignednessAccelerated
     * }
     */
    public static int integerDotProduct32BitMixedSignednessAccelerated(MemorySegment struct) {
        return struct.get(integerDotProduct32BitMixedSignednessAccelerated$LAYOUT, integerDotProduct32BitMixedSignednessAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct32BitMixedSignednessAccelerated
     * }
     */
    public static void integerDotProduct32BitMixedSignednessAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProduct32BitMixedSignednessAccelerated$LAYOUT, integerDotProduct32BitMixedSignednessAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProduct64BitUnsignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProduct64BitUnsignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct64BitUnsignedAccelerated
     * }
     */
    public static final OfInt integerDotProduct64BitUnsignedAccelerated$layout() {
        return integerDotProduct64BitUnsignedAccelerated$LAYOUT;
    }

    private static final long integerDotProduct64BitUnsignedAccelerated$OFFSET = 104;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct64BitUnsignedAccelerated
     * }
     */
    public static final long integerDotProduct64BitUnsignedAccelerated$offset() {
        return integerDotProduct64BitUnsignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct64BitUnsignedAccelerated
     * }
     */
    public static int integerDotProduct64BitUnsignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProduct64BitUnsignedAccelerated$LAYOUT, integerDotProduct64BitUnsignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct64BitUnsignedAccelerated
     * }
     */
    public static void integerDotProduct64BitUnsignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProduct64BitUnsignedAccelerated$LAYOUT, integerDotProduct64BitUnsignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProduct64BitSignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProduct64BitSignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct64BitSignedAccelerated
     * }
     */
    public static final OfInt integerDotProduct64BitSignedAccelerated$layout() {
        return integerDotProduct64BitSignedAccelerated$LAYOUT;
    }

    private static final long integerDotProduct64BitSignedAccelerated$OFFSET = 108;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct64BitSignedAccelerated
     * }
     */
    public static final long integerDotProduct64BitSignedAccelerated$offset() {
        return integerDotProduct64BitSignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct64BitSignedAccelerated
     * }
     */
    public static int integerDotProduct64BitSignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProduct64BitSignedAccelerated$LAYOUT, integerDotProduct64BitSignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct64BitSignedAccelerated
     * }
     */
    public static void integerDotProduct64BitSignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProduct64BitSignedAccelerated$LAYOUT, integerDotProduct64BitSignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProduct64BitMixedSignednessAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProduct64BitMixedSignednessAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct64BitMixedSignednessAccelerated
     * }
     */
    public static final OfInt integerDotProduct64BitMixedSignednessAccelerated$layout() {
        return integerDotProduct64BitMixedSignednessAccelerated$LAYOUT;
    }

    private static final long integerDotProduct64BitMixedSignednessAccelerated$OFFSET = 112;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct64BitMixedSignednessAccelerated
     * }
     */
    public static final long integerDotProduct64BitMixedSignednessAccelerated$offset() {
        return integerDotProduct64BitMixedSignednessAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct64BitMixedSignednessAccelerated
     * }
     */
    public static int integerDotProduct64BitMixedSignednessAccelerated(MemorySegment struct) {
        return struct.get(integerDotProduct64BitMixedSignednessAccelerated$LAYOUT, integerDotProduct64BitMixedSignednessAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProduct64BitMixedSignednessAccelerated
     * }
     */
    public static void integerDotProduct64BitMixedSignednessAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProduct64BitMixedSignednessAccelerated$LAYOUT, integerDotProduct64BitMixedSignednessAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProductAccumulatingSaturating8BitUnsignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating8BitUnsignedAccelerated
     * }
     */
    public static final OfInt integerDotProductAccumulatingSaturating8BitUnsignedAccelerated$layout() {
        return integerDotProductAccumulatingSaturating8BitUnsignedAccelerated$LAYOUT;
    }

    private static final long integerDotProductAccumulatingSaturating8BitUnsignedAccelerated$OFFSET = 116;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating8BitUnsignedAccelerated
     * }
     */
    public static final long integerDotProductAccumulatingSaturating8BitUnsignedAccelerated$offset() {
        return integerDotProductAccumulatingSaturating8BitUnsignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating8BitUnsignedAccelerated
     * }
     */
    public static int integerDotProductAccumulatingSaturating8BitUnsignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProductAccumulatingSaturating8BitUnsignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating8BitUnsignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating8BitUnsignedAccelerated
     * }
     */
    public static void integerDotProductAccumulatingSaturating8BitUnsignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProductAccumulatingSaturating8BitUnsignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating8BitUnsignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProductAccumulatingSaturating8BitSignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProductAccumulatingSaturating8BitSignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating8BitSignedAccelerated
     * }
     */
    public static final OfInt integerDotProductAccumulatingSaturating8BitSignedAccelerated$layout() {
        return integerDotProductAccumulatingSaturating8BitSignedAccelerated$LAYOUT;
    }

    private static final long integerDotProductAccumulatingSaturating8BitSignedAccelerated$OFFSET = 120;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating8BitSignedAccelerated
     * }
     */
    public static final long integerDotProductAccumulatingSaturating8BitSignedAccelerated$offset() {
        return integerDotProductAccumulatingSaturating8BitSignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating8BitSignedAccelerated
     * }
     */
    public static int integerDotProductAccumulatingSaturating8BitSignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProductAccumulatingSaturating8BitSignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating8BitSignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating8BitSignedAccelerated
     * }
     */
    public static void integerDotProductAccumulatingSaturating8BitSignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProductAccumulatingSaturating8BitSignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating8BitSignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated
     * }
     */
    public static final OfInt integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated$layout() {
        return integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated$LAYOUT;
    }

    private static final long integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated$OFFSET = 124;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated
     * }
     */
    public static final long integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated$offset() {
        return integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated
     * }
     */
    public static int integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated(MemorySegment struct) {
        return struct.get(integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated$LAYOUT, integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated
     * }
     */
    public static void integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated$LAYOUT, integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated
     * }
     */
    public static final OfInt integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated$layout() {
        return integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated$LAYOUT;
    }

    private static final long integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated$OFFSET = 128;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated
     * }
     */
    public static final long integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated$offset() {
        return integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated
     * }
     */
    public static int integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated
     * }
     */
    public static void integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated
     * }
     */
    public static final OfInt integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated$layout() {
        return integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated$LAYOUT;
    }

    private static final long integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated$OFFSET = 132;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated
     * }
     */
    public static final long integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated$offset() {
        return integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated
     * }
     */
    public static int integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated
     * }
     */
    public static void integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated
     * }
     */
    public static final OfInt integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated$layout() {
        return integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated$LAYOUT;
    }

    private static final long integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated$OFFSET = 136;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated
     * }
     */
    public static final long integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated$offset() {
        return integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated
     * }
     */
    public static int integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated(MemorySegment struct) {
        return struct.get(integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated$LAYOUT, integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated
     * }
     */
    public static void integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated$LAYOUT, integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProductAccumulatingSaturating16BitUnsignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating16BitUnsignedAccelerated
     * }
     */
    public static final OfInt integerDotProductAccumulatingSaturating16BitUnsignedAccelerated$layout() {
        return integerDotProductAccumulatingSaturating16BitUnsignedAccelerated$LAYOUT;
    }

    private static final long integerDotProductAccumulatingSaturating16BitUnsignedAccelerated$OFFSET = 140;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating16BitUnsignedAccelerated
     * }
     */
    public static final long integerDotProductAccumulatingSaturating16BitUnsignedAccelerated$offset() {
        return integerDotProductAccumulatingSaturating16BitUnsignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating16BitUnsignedAccelerated
     * }
     */
    public static int integerDotProductAccumulatingSaturating16BitUnsignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProductAccumulatingSaturating16BitUnsignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating16BitUnsignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating16BitUnsignedAccelerated
     * }
     */
    public static void integerDotProductAccumulatingSaturating16BitUnsignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProductAccumulatingSaturating16BitUnsignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating16BitUnsignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProductAccumulatingSaturating16BitSignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProductAccumulatingSaturating16BitSignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating16BitSignedAccelerated
     * }
     */
    public static final OfInt integerDotProductAccumulatingSaturating16BitSignedAccelerated$layout() {
        return integerDotProductAccumulatingSaturating16BitSignedAccelerated$LAYOUT;
    }

    private static final long integerDotProductAccumulatingSaturating16BitSignedAccelerated$OFFSET = 144;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating16BitSignedAccelerated
     * }
     */
    public static final long integerDotProductAccumulatingSaturating16BitSignedAccelerated$offset() {
        return integerDotProductAccumulatingSaturating16BitSignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating16BitSignedAccelerated
     * }
     */
    public static int integerDotProductAccumulatingSaturating16BitSignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProductAccumulatingSaturating16BitSignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating16BitSignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating16BitSignedAccelerated
     * }
     */
    public static void integerDotProductAccumulatingSaturating16BitSignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProductAccumulatingSaturating16BitSignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating16BitSignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated
     * }
     */
    public static final OfInt integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated$layout() {
        return integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated$LAYOUT;
    }

    private static final long integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated$OFFSET = 148;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated
     * }
     */
    public static final long integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated$offset() {
        return integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated
     * }
     */
    public static int integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated(MemorySegment struct) {
        return struct.get(integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated$LAYOUT, integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated
     * }
     */
    public static void integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated$LAYOUT, integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProductAccumulatingSaturating32BitUnsignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating32BitUnsignedAccelerated
     * }
     */
    public static final OfInt integerDotProductAccumulatingSaturating32BitUnsignedAccelerated$layout() {
        return integerDotProductAccumulatingSaturating32BitUnsignedAccelerated$LAYOUT;
    }

    private static final long integerDotProductAccumulatingSaturating32BitUnsignedAccelerated$OFFSET = 152;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating32BitUnsignedAccelerated
     * }
     */
    public static final long integerDotProductAccumulatingSaturating32BitUnsignedAccelerated$offset() {
        return integerDotProductAccumulatingSaturating32BitUnsignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating32BitUnsignedAccelerated
     * }
     */
    public static int integerDotProductAccumulatingSaturating32BitUnsignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProductAccumulatingSaturating32BitUnsignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating32BitUnsignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating32BitUnsignedAccelerated
     * }
     */
    public static void integerDotProductAccumulatingSaturating32BitUnsignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProductAccumulatingSaturating32BitUnsignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating32BitUnsignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProductAccumulatingSaturating32BitSignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProductAccumulatingSaturating32BitSignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating32BitSignedAccelerated
     * }
     */
    public static final OfInt integerDotProductAccumulatingSaturating32BitSignedAccelerated$layout() {
        return integerDotProductAccumulatingSaturating32BitSignedAccelerated$LAYOUT;
    }

    private static final long integerDotProductAccumulatingSaturating32BitSignedAccelerated$OFFSET = 156;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating32BitSignedAccelerated
     * }
     */
    public static final long integerDotProductAccumulatingSaturating32BitSignedAccelerated$offset() {
        return integerDotProductAccumulatingSaturating32BitSignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating32BitSignedAccelerated
     * }
     */
    public static int integerDotProductAccumulatingSaturating32BitSignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProductAccumulatingSaturating32BitSignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating32BitSignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating32BitSignedAccelerated
     * }
     */
    public static void integerDotProductAccumulatingSaturating32BitSignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProductAccumulatingSaturating32BitSignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating32BitSignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated
     * }
     */
    public static final OfInt integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated$layout() {
        return integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated$LAYOUT;
    }

    private static final long integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated$OFFSET = 160;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated
     * }
     */
    public static final long integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated$offset() {
        return integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated
     * }
     */
    public static int integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated(MemorySegment struct) {
        return struct.get(integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated$LAYOUT, integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated
     * }
     */
    public static void integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated$LAYOUT, integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProductAccumulatingSaturating64BitUnsignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating64BitUnsignedAccelerated
     * }
     */
    public static final OfInt integerDotProductAccumulatingSaturating64BitUnsignedAccelerated$layout() {
        return integerDotProductAccumulatingSaturating64BitUnsignedAccelerated$LAYOUT;
    }

    private static final long integerDotProductAccumulatingSaturating64BitUnsignedAccelerated$OFFSET = 164;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating64BitUnsignedAccelerated
     * }
     */
    public static final long integerDotProductAccumulatingSaturating64BitUnsignedAccelerated$offset() {
        return integerDotProductAccumulatingSaturating64BitUnsignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating64BitUnsignedAccelerated
     * }
     */
    public static int integerDotProductAccumulatingSaturating64BitUnsignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProductAccumulatingSaturating64BitUnsignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating64BitUnsignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating64BitUnsignedAccelerated
     * }
     */
    public static void integerDotProductAccumulatingSaturating64BitUnsignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProductAccumulatingSaturating64BitUnsignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating64BitUnsignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProductAccumulatingSaturating64BitSignedAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProductAccumulatingSaturating64BitSignedAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating64BitSignedAccelerated
     * }
     */
    public static final OfInt integerDotProductAccumulatingSaturating64BitSignedAccelerated$layout() {
        return integerDotProductAccumulatingSaturating64BitSignedAccelerated$LAYOUT;
    }

    private static final long integerDotProductAccumulatingSaturating64BitSignedAccelerated$OFFSET = 168;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating64BitSignedAccelerated
     * }
     */
    public static final long integerDotProductAccumulatingSaturating64BitSignedAccelerated$offset() {
        return integerDotProductAccumulatingSaturating64BitSignedAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating64BitSignedAccelerated
     * }
     */
    public static int integerDotProductAccumulatingSaturating64BitSignedAccelerated(MemorySegment struct) {
        return struct.get(integerDotProductAccumulatingSaturating64BitSignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating64BitSignedAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating64BitSignedAccelerated
     * }
     */
    public static void integerDotProductAccumulatingSaturating64BitSignedAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProductAccumulatingSaturating64BitSignedAccelerated$LAYOUT, integerDotProductAccumulatingSaturating64BitSignedAccelerated$OFFSET, fieldValue);
    }

    private static final OfInt integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated$LAYOUT = (OfInt)$LAYOUT.select(groupElement("integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated
     * }
     */
    public static final OfInt integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated$layout() {
        return integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated$LAYOUT;
    }

    private static final long integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated$OFFSET = 172;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated
     * }
     */
    public static final long integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated$offset() {
        return integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated
     * }
     */
    public static int integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated(MemorySegment struct) {
        return struct.get(integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated$LAYOUT, integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated
     * }
     */
    public static void integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated(MemorySegment struct, int fieldValue) {
        struct.set(integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated$LAYOUT, integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated$OFFSET, fieldValue);
    }

    private static final OfLong storageTexelBufferOffsetAlignmentBytes$LAYOUT = (OfLong)$LAYOUT.select(groupElement("storageTexelBufferOffsetAlignmentBytes"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkDeviceSize storageTexelBufferOffsetAlignmentBytes
     * }
     */
    public static final OfLong storageTexelBufferOffsetAlignmentBytes$layout() {
        return storageTexelBufferOffsetAlignmentBytes$LAYOUT;
    }

    private static final long storageTexelBufferOffsetAlignmentBytes$OFFSET = 176;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkDeviceSize storageTexelBufferOffsetAlignmentBytes
     * }
     */
    public static final long storageTexelBufferOffsetAlignmentBytes$offset() {
        return storageTexelBufferOffsetAlignmentBytes$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkDeviceSize storageTexelBufferOffsetAlignmentBytes
     * }
     */
    public static long storageTexelBufferOffsetAlignmentBytes(MemorySegment struct) {
        return struct.get(storageTexelBufferOffsetAlignmentBytes$LAYOUT, storageTexelBufferOffsetAlignmentBytes$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkDeviceSize storageTexelBufferOffsetAlignmentBytes
     * }
     */
    public static void storageTexelBufferOffsetAlignmentBytes(MemorySegment struct, long fieldValue) {
        struct.set(storageTexelBufferOffsetAlignmentBytes$LAYOUT, storageTexelBufferOffsetAlignmentBytes$OFFSET, fieldValue);
    }

    private static final OfInt storageTexelBufferOffsetSingleTexelAlignment$LAYOUT = (OfInt)$LAYOUT.select(groupElement("storageTexelBufferOffsetSingleTexelAlignment"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 storageTexelBufferOffsetSingleTexelAlignment
     * }
     */
    public static final OfInt storageTexelBufferOffsetSingleTexelAlignment$layout() {
        return storageTexelBufferOffsetSingleTexelAlignment$LAYOUT;
    }

    private static final long storageTexelBufferOffsetSingleTexelAlignment$OFFSET = 184;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 storageTexelBufferOffsetSingleTexelAlignment
     * }
     */
    public static final long storageTexelBufferOffsetSingleTexelAlignment$offset() {
        return storageTexelBufferOffsetSingleTexelAlignment$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 storageTexelBufferOffsetSingleTexelAlignment
     * }
     */
    public static int storageTexelBufferOffsetSingleTexelAlignment(MemorySegment struct) {
        return struct.get(storageTexelBufferOffsetSingleTexelAlignment$LAYOUT, storageTexelBufferOffsetSingleTexelAlignment$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 storageTexelBufferOffsetSingleTexelAlignment
     * }
     */
    public static void storageTexelBufferOffsetSingleTexelAlignment(MemorySegment struct, int fieldValue) {
        struct.set(storageTexelBufferOffsetSingleTexelAlignment$LAYOUT, storageTexelBufferOffsetSingleTexelAlignment$OFFSET, fieldValue);
    }

    private static final OfLong uniformTexelBufferOffsetAlignmentBytes$LAYOUT = (OfLong)$LAYOUT.select(groupElement("uniformTexelBufferOffsetAlignmentBytes"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkDeviceSize uniformTexelBufferOffsetAlignmentBytes
     * }
     */
    public static final OfLong uniformTexelBufferOffsetAlignmentBytes$layout() {
        return uniformTexelBufferOffsetAlignmentBytes$LAYOUT;
    }

    private static final long uniformTexelBufferOffsetAlignmentBytes$OFFSET = 192;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkDeviceSize uniformTexelBufferOffsetAlignmentBytes
     * }
     */
    public static final long uniformTexelBufferOffsetAlignmentBytes$offset() {
        return uniformTexelBufferOffsetAlignmentBytes$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkDeviceSize uniformTexelBufferOffsetAlignmentBytes
     * }
     */
    public static long uniformTexelBufferOffsetAlignmentBytes(MemorySegment struct) {
        return struct.get(uniformTexelBufferOffsetAlignmentBytes$LAYOUT, uniformTexelBufferOffsetAlignmentBytes$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkDeviceSize uniformTexelBufferOffsetAlignmentBytes
     * }
     */
    public static void uniformTexelBufferOffsetAlignmentBytes(MemorySegment struct, long fieldValue) {
        struct.set(uniformTexelBufferOffsetAlignmentBytes$LAYOUT, uniformTexelBufferOffsetAlignmentBytes$OFFSET, fieldValue);
    }

    private static final OfInt uniformTexelBufferOffsetSingleTexelAlignment$LAYOUT = (OfInt)$LAYOUT.select(groupElement("uniformTexelBufferOffsetSingleTexelAlignment"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkBool32 uniformTexelBufferOffsetSingleTexelAlignment
     * }
     */
    public static final OfInt uniformTexelBufferOffsetSingleTexelAlignment$layout() {
        return uniformTexelBufferOffsetSingleTexelAlignment$LAYOUT;
    }

    private static final long uniformTexelBufferOffsetSingleTexelAlignment$OFFSET = 200;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkBool32 uniformTexelBufferOffsetSingleTexelAlignment
     * }
     */
    public static final long uniformTexelBufferOffsetSingleTexelAlignment$offset() {
        return uniformTexelBufferOffsetSingleTexelAlignment$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkBool32 uniformTexelBufferOffsetSingleTexelAlignment
     * }
     */
    public static int uniformTexelBufferOffsetSingleTexelAlignment(MemorySegment struct) {
        return struct.get(uniformTexelBufferOffsetSingleTexelAlignment$LAYOUT, uniformTexelBufferOffsetSingleTexelAlignment$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkBool32 uniformTexelBufferOffsetSingleTexelAlignment
     * }
     */
    public static void uniformTexelBufferOffsetSingleTexelAlignment(MemorySegment struct, int fieldValue) {
        struct.set(uniformTexelBufferOffsetSingleTexelAlignment$LAYOUT, uniformTexelBufferOffsetSingleTexelAlignment$OFFSET, fieldValue);
    }

    private static final OfLong maxBufferSize$LAYOUT = (OfLong)$LAYOUT.select(groupElement("maxBufferSize"));

    /**
     * Layout for field:
     * {@snippet lang=c :
     * VkDeviceSize maxBufferSize
     * }
     */
    public static final OfLong maxBufferSize$layout() {
        return maxBufferSize$LAYOUT;
    }

    private static final long maxBufferSize$OFFSET = 208;

    /**
     * Offset for field:
     * {@snippet lang=c :
     * VkDeviceSize maxBufferSize
     * }
     */
    public static final long maxBufferSize$offset() {
        return maxBufferSize$OFFSET;
    }

    /**
     * Getter for field:
     * {@snippet lang=c :
     * VkDeviceSize maxBufferSize
     * }
     */
    public static long maxBufferSize(MemorySegment struct) {
        return struct.get(maxBufferSize$LAYOUT, maxBufferSize$OFFSET);
    }

    /**
     * Setter for field:
     * {@snippet lang=c :
     * VkDeviceSize maxBufferSize
     * }
     */
    public static void maxBufferSize(MemorySegment struct, long fieldValue) {
        struct.set(maxBufferSize$LAYOUT, maxBufferSize$OFFSET, fieldValue);
    }

    /**
     * Obtains a slice of {@code arrayParam} which selects the array element at {@code index}.
     * The returned segment has address {@code arrayParam.address() + index * layout().byteSize()}
     */
    public static MemorySegment asSlice(MemorySegment array, long index) {
        return array.asSlice(layout().byteSize() * index);
    }

    /**
     * The size (in bytes) of this struct
     */
    public static long sizeof() { return layout().byteSize(); }

    /**
     * Allocate a segment of size {@code layout().byteSize()} using {@code allocator}
     */
    public static MemorySegment allocate(SegmentAllocator allocator) {
        return allocator.allocate(layout());
    }

    /**
     * Allocate an array of size {@code elementCount} using {@code allocator}.
     * The returned segment has size {@code elementCount * layout().byteSize()}.
     */
    public static MemorySegment allocateArray(long elementCount, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(elementCount, layout()));
    }

    /**
     * Reinterprets {@code addr} using target {@code arena} and {@code cleanupAction) (if any).
     * The returned segment has size {@code layout().byteSize()}
     */
    public static MemorySegment reinterpret(MemorySegment addr, Arena arena, Consumer<MemorySegment> cleanup) {
        return reinterpret(addr, 1, arena, cleanup);
    }

    /**
     * Reinterprets {@code addr} using target {@code arena} and {@code cleanupAction) (if any).
     * The returned segment has size {@code elementCount * layout().byteSize()}
     */
    public static MemorySegment reinterpret(MemorySegment addr, long elementCount, Arena arena, Consumer<MemorySegment> cleanup) {
        return addr.reinterpret(layout().byteSize() * elementCount, arena, cleanup);
    }
}

